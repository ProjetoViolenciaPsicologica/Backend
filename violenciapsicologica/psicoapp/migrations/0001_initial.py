# Generated by Django 4.0.6 on 2024-02-25 23:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import psicoapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', psicoapp.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AreaUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definicaoArea', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Área de um usuário',
                'verbose_name_plural': 'Áreas de um usuário',
            },
        ),
        migrations.CreateModel(
            name='LocalAplicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definicaoLocal', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Local da Aplicação',
                'verbose_name_plural': 'Locais da Aplicação',
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definicaoTipo', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': 'Tipo de um usuário',
                'verbose_name_plural': 'Tipos de um usuário',
            },
        ),
        migrations.CreateModel(
            name='Formulario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo_questoes', models.TextField()),
                ('idade', models.IntegerField(default=0)),
                ('data_e_hora', models.DateTimeField(default='')),
                ('escolha_sexo', models.CharField(default='', max_length=255)),
                ('grau_de_instrucao', models.CharField(default='', max_length=255)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Formulário',
                'verbose_name_plural': 'Formulários',
            },
        ),
    ]
